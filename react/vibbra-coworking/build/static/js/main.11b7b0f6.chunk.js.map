{"version":3,"sources":["services/api.js","components/topo/index.js","util/auth.js","pages/conta/login/index.js","util/mask.js","pages/conta/criar-rh/index.js","pages/conta/criar-profissional/index.js","components/footer/index.js","components/header/index.js","components/menu/index.js","pages/admin/dashboard/index.js","pages/admin/locais/index.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","Topo","props","className","collapse","id","href","src","alt","parseJwt","base64","localStorage","getItem","split","replace","JSON","parse","window","atob","Login","useForm","register","handleSubmit","errors","useState","setCollapse","email","setEmail","senha","setSenha","loading","setLoading","mensagem","setMensagem","role","onSubmit","event","post","then","response","setItem","data","token","console","log","TypeUser","history","push","catch","error","htmlFor","type","onChange","e","target","value","name","placeholder","ref","required","pattern","message","dangerouslySetInnerHTML","__html","to","onClick","cpfMask","cnpjMask","cepMask","celularMask","moedarealMask","moeda","CriarRh","nomeUsuario","setNomeUsuario","razaoSocial","setRazaoSocial","cnpj","setCNPJ","limparCampos","obj","disabled","CriarProfissional","nome","setNome","celular","setCelular","cpf","setCPF","rg","setRG","Footer","HeaderAdmin","clear","location","Menu","pathname","data-feather","DashBoard","Locais","locais","setLocais","textoFiltrado","setTextoFiltrado","locaisFiltrados","setLocaisFiltrados","descricaoLocal","setDescricaoLocal","quantCadeiras","setQuantCadeiras","quantMesas","setQuantMesas","custoHora","setCustoHora","cep","setCep","logradouro","setLogradouro","estado","setEstado","cidade","setCidade","imagem","setImagem","bairro","setBairro","setId","columns","cell","row","image","ignoreRowClick","allowOverflow","button","selector","sortable","data-tag","tipoLocal","typePlace","editar","remover","useEffect","listaLocais","limparCarmpos","tipo","local","filter","item","length","numberChairs","numberTables","hourlyCost","address","district","state","city","confirm","delete","headers","Authorization","toast","success","get","position","autoClose","put","maxLength","erro","localidade","uf","toLowerCase","includes","noDataComponent","pagination","Boolean","hostname","match","PermissaoAdmin","Component","component","render","ReactDOM","exact","path","CriarContaRh","CriarContaProfissional","AdminDashboard","AdminLocais","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11b7b0f6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst api = axios.create({\r\n    //baseURL: \"http://corujasdev-001-site7.etempurl.com/api\"\r\n    baseURL: \"http://localhost:5000/api\"\r\n});\r\n\r\nexport default api;","import React from 'react'\r\n\r\nfunction Topo(props) {\r\n\r\n\r\n    return (\r\n\r\n        < header >\r\n            <div className={props.collapse} id=\"navbarHeader\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-6 py-4\">\r\n                            <h4 className=\"text-white\">99 Work</h4>\r\n                            <p className=\"text-muted\">CADASTRE-SE GRATUITAMENTE E TENHA ACESSO A DIVERSOS LOCAIS(ESTAÇÕES DE\r\n                            TRABALHO, SALA DE REUNIÃO) A UM CLICK</p>\r\n                        </div>\r\n                        <div className=\"col-sm-3 py-4\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">RH</h5>\r\n                                    <hr className=\"my-4\" />\r\n                                    <p className=\"card-text\">Ofereça seu espaço para profissionais e lucre, conheça\r\n                                    profissionais altamente qualificados</p>\r\n                                    <a href='/conta/rh' className=\"btn btn-primary\">Criar Conta</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-3 py-4\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Profissional</h5>\r\n                                    <hr className=\"my-4\" />\r\n                                    <p className=\"card-text\">Encontre Locais rapidamente, de forma segura com um otimo\r\n                                    custo benefíco e faça muito networking</p>\r\n                                    <a href=\"/conta/profissional\" className=\"btn btn-primary\">Criar Conta</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar  shadow-sm\">\r\n                <div className=\"container d-flex justify-content-between\">\r\n                    <a href=\"/conta/login.html\" className=\"navbar-brand d-flex align-items-center\">\r\n                        <img src=\"https://vibbra.com.br/src/images/logo.svg\" alt=\"Vibbra Work\" className=\"logo\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Topo;","export const usuarioAutenticado = () => localStorage.getItem(\"usuario-vibbra-coworking\") !== null;\r\n\r\nexport const parseJwt = () => {\r\n    var base64Url = localStorage.getItem(\"usuario-vibbra-coworking\").split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n    return JSON.parse(window.atob(base64));\r\n}","/* eslint-disable array-callback-return */\r\n/* eslint-disable no-self-compare */\r\n\r\nimport React, { useState } from 'react';\r\nimport useForm from 'react-hook-form';\r\nimport api from '../../../services/api';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Topo from '../../../components/topo'\r\nimport '../conta.css';\r\n\r\nimport { parseJwt } from '../../../util/auth';\r\n\r\nfunction Login(props) {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [collapse, setCollapse] = useState('collapse bg-dark');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [mensagem, setMensagem] = useState('');\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        setLoading(true);\r\n\r\n        api.post('/accounts/login',\r\n            {\r\n                \"email\": email,\r\n                \"password\": senha\r\n            })\r\n            .then(response => {\r\n                localStorage.setItem(\"usuario-vibbra-coworking\", response.data.token);\r\n                console.log(parseJwt().TypeUser);\r\n\r\n                switch (parseJwt().TypeUser) {\r\n                    case \"Administrator\":\r\n                        props.history.push('/admin/locais')\r\n                        break;\r\n                    case \"HumanResources\":\r\n                        props.history.push('/rh/dashboard')\r\n                        break;\r\n                    case \"Professional\":\r\n                        props.history.push('/profissional/dashboard')\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                setMensagem(\"<alert class='alert alert-danger mt-4'  role='alert'>Email ou senha inválidos!</alert>\")\r\n                setSenha('');\r\n                setEmail('');\r\n            });\r\n\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const topo = () => {\r\n        if (collapse === 'collapse bg-dark') {\r\n            setCollapse('bg-dark')\r\n        } else {\r\n            setCollapse('collapse bg-dark')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <Topo collapse={collapse}></Topo>\r\n\r\n            <main role=\"main\">\r\n                <div className=\"container\">\r\n                    <div className=\"jumbotron mt-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-7\">\r\n                                <h3 className=\"display-4\">Rápido, seguro e com muito Networking</h3>\r\n                                <p className=\"lead\">Encontre facilmente uma estação de trabalho ou oferte o espaço dentro da sua\r\n                            empresa</p>\r\n                            </div>\r\n                            <div className=\"col-5\">\r\n                                <form className=\"form-signin\" onSubmit={handleSubmit(onSubmit)}>\r\n                                    <h1 className=\"h3 mb-3 font-weight-normal\">Login</h1>\r\n                                    <label htmlFor=\"email\" className=\"sr-only\">Informe seu e-mail</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        onChange={e => {\r\n                                            setEmail(e.target.value);\r\n                                            setMensagem('')\r\n                                        }\r\n                                        }\r\n                                        value={email}\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Informe seu e-mail\"\r\n                                        ref={register({\r\n                                            required: 'E-mail obrigatório',\r\n                                            pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: \"Informe um e-mail válido\"\r\n                                            }\r\n                                        })} />\r\n                                    {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n                                    <label htmlFor=\"senha\" className=\"sr-only\">Informe sua senha</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        onChange={e => {\r\n                                            setSenha(e.target.value)\r\n                                            setMensagem('');\r\n                                        }}\r\n                                        value={senha}\r\n                                        name=\"senha\"\r\n                                        id=\"senha\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Informe sua senha\"\r\n                                        ref={register({\r\n                                            required: 'Senha obrigatória',\r\n                                        })} />\r\n                                    {errors.senha && <span className=\"error\">{errors.senha.message}</span>}\r\n                                    <div className=\"mt-3\">\r\n                                        <button className=\"btn btn-block btn-primary\" type=\"submit\">{loading ? \"Entrando...\" : \"Entrar\"}</button>\r\n                                    </div>\r\n\r\n                                    {mensagem !== '' ?\r\n                                        <div className=\"mt-4 mb-4\" dangerouslySetInnerHTML={{ __html: mensagem }} /> : ''}\r\n\r\n\r\n                                    <div className=\"mt-2\">\r\n                                        Ainda não possui uma conta? <Link to=\"#\" onClick={() => topo()}>Cria sua conta agora!</Link>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Login;","export const cpfMask = value => {\r\n    return value\r\n        .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n        .replace(/(-\\d{2})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\r\n}\r\n\r\n\r\nexport const cnpjMask = value => {\r\n    return value\r\n        .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n        .replace(/(\\d{2})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d{1,2})/, '$1/$2')\r\n        .replace(/(\\d{4})(\\d)/, '$1-$2') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\r\n        .replace(/(-\\d{2})\\d+?$/, '$1')\r\n}\r\n\r\nexport const cepMask = value => {\r\n    return value\r\n        .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n        .replace(/(\\d{5})(\\d)/, '$1-$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n        .replace(/(-\\d{3})\\d+?$/, '$1')\r\n}\r\n\r\nexport const celularMask = value => {\r\n    return value\r\n        .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n        .replace(/(\\d{2})(\\d)/, '($1) $2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n        .replace(/(\\d{5})(\\d)/, '$1-$2')\r\n        .replace(/(-\\d{4})\\d+?$/, '$1')\r\n}\r\n\r\nexport const telefoneMask = value => {\r\n    return value\r\n        .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n        .replace(/(\\d{2})(\\d)/, '($1) $2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\r\n        .replace(/(-\\d{4})\\d+?$/, '$1')\r\n}\r\n\r\nexport const moedarealMask = value => {\r\n\r\n    var moeda = value.replace(/\\D/g, '')\r\n        .replace(/(\\d{1,2})$/, ',$1')\r\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\r\n\r\n    return (moeda !== '' ? moeda : '');\r\n\r\n}","import React, { useState } from 'react';\r\nimport useForm from 'react-hook-form';\r\nimport api from '../../../services/api';\r\nimport { cnpjMask } from '../../../util/mask';\r\n\r\nimport Topo from '../../../components/topo'\r\nimport '../conta.css';\r\n\r\nfunction CriarRh(props) {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [nomeUsuario, setNomeUsuario] = useState('');\r\n    const [razaoSocial, setRazaoSocial] = useState('');\r\n    const [cnpj, setCNPJ] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [mensagem, setMensagem] = useState('');\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        setLoading(true);\r\n        var obj = {\r\n            \"userName\": nomeUsuario,\r\n            \"companyName\": razaoSocial,\r\n            \"cnpj\": cnpj,\r\n            \"email\": email,\r\n            \"password\": senha,\r\n            \"typeUser\": 2\r\n        }\r\n\r\n        api.post('/accounts/create/rh', obj)\r\n            .then(response => {\r\n                setMensagem(\"<alert class='alert alert-success mt-4'  role='alert'>Usuário Cadastrado, verifique seu e-mail!!!</alert>\")\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        limparCampos();\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const limparCampos = () => {\r\n        setNomeUsuario('');\r\n        setRazaoSocial('');\r\n        setCNPJ('');\r\n        setEmail('');\r\n        setSenha('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <Topo collapse='collapse bg-black'></Topo>\r\n\r\n            <main role=\"main\">\r\n                <div className=\"container\">\r\n                    <div className=\"jumbotron mt-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-7\">\r\n                                <h3 className=\"display-4\">Conta RH</h3>\r\n                                <hr className=\"mt-4\" />\r\n                                <p className=\"lead\">Encontre facilmente uma estação de trabalho ou oferte o espaço dentro da sua\r\n                                    empresa</p>\r\n                            </div>\r\n                            <div className=\"col-5\">\r\n                                <p>Preencha os campos abaixo:</p>\r\n                                <form className=\"form-signin\" onSubmit={handleSubmit(onSubmit)}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"nomeUsuario\" className=\"sr-only\">Informe seu Nome de Usuário</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setNomeUsuario(e.target.value);\r\n                                            }\r\n                                            }\r\n                                            value={nomeUsuario}\r\n                                            id=\"nomeUsuario\"\r\n                                            name=\"nomeUsuario\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu Nome de usuário\"\r\n                                            ref={register({\r\n                                                required: 'Nome de usuário obrigatório'\r\n                                            })} />\r\n                                        {errors.nomeUsuario && <span className=\"error\">{errors.nomeUsuario.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"razaoSocial\" className=\"sr-only\">Razão Social</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setRazaoSocial(e.target.value);\r\n                                            }\r\n                                            }\r\n                                            value={razaoSocial}\r\n                                            id=\"razaoSocial\"\r\n                                            name=\"razaoSocial\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe sua Razão Social\"\r\n                                            ref={register({\r\n                                                required: 'Razão Social obrigatória'\r\n                                            })} />\r\n                                        {errors.razaoSocial && <span className=\"error\">{errors.razaoSocial.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"cnpj\" className=\"sr-only\">Informe seu CNPJ</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setCNPJ(cnpjMask(e.target.value));\r\n                                            }\r\n                                            }\r\n                                            value={cnpj}\r\n                                            id=\"cnpj\"\r\n                                            name=\"cnpj\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu CNPJ\"\r\n                                            ref={register({\r\n                                                required: 'CNPJ obrigatório'\r\n                                            })} />\r\n                                        {errors.cnpj && <span className=\"error\">{errors.cnpj.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\" className=\"sr-only\">Informe seu e-mail</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            onChange={e => {\r\n                                                setEmail(e.target.value);\r\n                                                setMensagem('')\r\n                                            }\r\n                                            }\r\n                                            value={email}\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu e-mail\"\r\n                                            ref={register({\r\n                                                required: 'E-mail obrigatório',\r\n                                                pattern: {\r\n                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                    message: \"Informe um e-mail válido\"\r\n                                                }\r\n                                            })} />\r\n                                        {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"senha\" className=\"sr-only\">Informe sua senha</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            onChange={e => {\r\n                                                setSenha(e.target.value)\r\n                                                setMensagem('');\r\n                                            }}\r\n                                            value={senha}\r\n                                            name=\"senha\"\r\n                                            id=\"senha\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe sua senha\"\r\n                                            ref={register({\r\n                                                required: 'Senha obrigatória',\r\n                                            })} />\r\n                                        {errors.senha && <span className=\"error\">{errors.senha.message}</span>}\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" disabled={!loading ? '' : 'none'}>{loading ? \"Cadastrando...\" : \"Cadastrar\"}</button>\r\n\r\n                                    {mensagem !== '' ?\r\n                                        <div className=\"mt-4 mb-4\" dangerouslySetInnerHTML={{ __html: mensagem }} /> : ''}\r\n\r\n                                    <div className=\"mt-2\">\r\n                                        Já possui uma conta? <a href=\"/\">Faça seu Login!</a>\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        Sou um profissinal? <a href=\"/conta/profissional\">Clique aqui!</a>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CriarRh;","import React, { useState } from 'react';\r\nimport useForm from 'react-hook-form';\r\nimport api from '../../../services/api';\r\nimport { cpfMask, celularMask } from '../../../util/mask';\r\n\r\nimport Topo from '../../../components/topo'\r\nimport '../conta.css';\r\n\r\nfunction CriarProfissional(props) {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [nomeUsuario, setNomeUsuario] = useState('');\r\n    const [nome, setNome] = useState('');\r\n    const [celular, setCelular] = useState('');\r\n    const [cpf, setCPF] = useState('');\r\n    const [rg, setRG] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [mensagem, setMensagem] = useState('');\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        setLoading(true);\r\n        var obj = {\r\n            \"userName\": nomeUsuario,\r\n            \"name\": nome,\r\n            \"celphone\": celular,\r\n            \"cpf\": cpf,\r\n            \"rg\": rg,\r\n            \"email\": email,\r\n            \"password\": senha,\r\n            \"typeUser\": 3\r\n        }\r\n\r\n\r\n        api.post('/accounts/create/professional', obj)\r\n            .then(response => {\r\n                setMensagem(\"<alert class='alert alert-success mt-4'  role='alert'>Usuário Cadastrado, verifique seu e-mail!!!</alert>\")\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\">\r\n            <Topo collapse='collapse bg-black'></Topo>\r\n\r\n            <main role=\"main\">\r\n                <div className=\"container\">\r\n                    <div className=\"jumbotron mt-5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-7\">\r\n                                <h3 className=\"display-4\">Conta Profissional</h3>\r\n                                <hr className=\"mt-4\" />\r\n                                <p className=\"lead\">Encontre facilmente uma estação de trabalho ou oferte o espaço dentro da sua empresa</p>\r\n                            </div>\r\n                            <div className=\"col-5\">\r\n                                <p>Preencha os campos abaixo:</p>\r\n                                <form className=\"form-signin\" onSubmit={handleSubmit(onSubmit)}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"nomeUsuario\" className=\"sr-only\">Informe seu Nome de Usuário</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setNomeUsuario(e.target.value);\r\n                                            }\r\n                                            }\r\n                                            value={nomeUsuario}\r\n                                            id=\"nomeUsuario\"\r\n                                            name=\"nomeUsuario\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu Nome de usuário\"\r\n                                            ref={register({\r\n                                                required: 'Nome de usuário obrigatório'\r\n                                            })} />\r\n                                        {errors.nomeUsuario && <span className=\"error\">{errors.nomeUsuario.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"nome\" className=\"sr-only\">Informe seu Nome</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setNome(e.target.value);\r\n                                            }\r\n                                            }\r\n                                            value={nome}\r\n                                            id=\"nome\"\r\n                                            name=\"nome\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu Nome\"\r\n                                            ref={register({\r\n                                                required: 'Nome obrigatório'\r\n                                            })} />\r\n                                        {errors.nome && <span className=\"error\">{errors.nome.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"celular\" className=\"sr-only\">Celular</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setCelular(celularMask(e.target.value));\r\n                                            }\r\n                                            }\r\n                                            value={celular}\r\n                                            id=\"celular\"\r\n                                            name=\"celular\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu número de Celular\"\r\n                                            ref={register({\r\n                                                required: 'Celular obrigatório'\r\n                                            })} />\r\n                                        {errors.celular && <span className=\"error\">{errors.celular.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"cpf\" className=\"sr-only\">Informe seu CPF</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setCPF(cpfMask(e.target.value));\r\n                                            }\r\n                                            }\r\n                                            value={cpf}\r\n                                            id=\"cpf\"\r\n                                            name=\"cpf\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu CPF\"\r\n                                            ref={register({\r\n                                                required: 'CPF obrigatório'\r\n                                            })} />\r\n                                        {errors.cpf && <span className=\"error\">{errors.cpf.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"rg\" className=\"sr-only\">Informe seu RG</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={e => {\r\n                                                setRG(e.target.value);\r\n                                            }\r\n                                            }\r\n                                            value={rg}\r\n                                            id=\"rg\"\r\n                                            name=\"rg\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu RG\"\r\n                                            ref={register({\r\n                                                required: 'RG obrigatório'\r\n                                            })} />\r\n                                        {errors.rg && <span className=\"error\">{errors.rg.message}</span>}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\" className=\"sr-only\">Informe seu e-mail</label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            onChange={e => {\r\n                                                setEmail(e.target.value);\r\n                                                setMensagem('')\r\n                                            }\r\n                                            }\r\n                                            value={email}\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe seu e-mail\"\r\n                                            ref={register({\r\n                                                required: 'E-mail obrigatório',\r\n                                                pattern: {\r\n                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                    message: \"Informe um e-mail válido\"\r\n                                                }\r\n                                            })} />\r\n                                        {errors.email && <span className=\"error\">{errors.email.message}</span>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"senha\" className=\"sr-only\">Informe sua senha</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            onChange={e => {\r\n                                                setSenha(e.target.value)\r\n                                                setMensagem('');\r\n                                            }}\r\n                                            value={senha}\r\n                                            name=\"senha\"\r\n                                            id=\"senha\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Informe sua senha\"\r\n                                            ref={register({\r\n                                                required: 'Senha obrigatória',\r\n                                            })} />\r\n                                        {errors.senha && <span className=\"error\">{errors.senha.message}</span>}\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" disabled={!loading ? '' : 'none'}>{loading ? \"Cadastrando...\" : \"Cadastrar\"}</button>\r\n\r\n                                    {mensagem !== '' ?\r\n                                        <div className=\"mt-4 mb-4\" dangerouslySetInnerHTML={{ __html: mensagem }} /> : ''}\r\n\r\n                                    <div className=\"mt-2\">\r\n                                        Já possui uma conta? <a href=\"/\">Faça seu Login!</a>\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        Sou do RH? <a href=\"/conta/rh\">Clique aqui!</a>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CriarProfissional;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer mt-auto py-3\">\r\n            <div className=\"container-fluid mt-4\">\r\n                <p className=\"text-right\">Desenvolvido por <a href=\"https://www.corujas.dev\">Corujas.Dev</a></p>\r\n\r\n            </div>\r\n        </footer>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\n\r\nfunction HeaderAdmin(props) {\r\n\r\n    const sair = () => {\r\n        localStorage.clear();\r\n        window.location.href = '/';\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n            <a className=\"navbar-brand col-sm-3 col-md-2 mr-0 text-center\" href=\"#\">\r\n                <img src=\"https://vibbra.com.br/src/images/logo.svg\" alt=\"Vibbra Work\" className=\"logo\" />\r\n            </a>\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <a className=\"nav-link\" href=\"#\" onClick={() => sair()}>Sair</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default HeaderAdmin;","import React from 'react'\r\n\r\nfunction Menu() {\r\n\r\n\r\n    return (\r\n        <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n            <div className=\"sidebar-sticky\">\r\n                <ul className=\"nav flex-column\">\r\n                    {/* <li className=\"nav-item\">\r\n                            <a className={window.location.pathname ==='/admin/dashboard' ? \"nav-link active\" : \"nav-link\" } href=\"/admin/dashboard\">\r\n                                <span data-feather=\"home\"></span>\r\n                                Dashboard\r\n                            </a>\r\n                        </li> */}\r\n                    <li className=\"nav-item\">\r\n                        <a className={window.location.pathname === '/admin/locais' ? \"nav-link active\" : \"nav-link\"} href=\"/admin/locais\">\r\n                            <span data-feather=\"file\"></span>\r\n                            Locais <span className=\"sr-only\">(current)</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport Footer from '../../../components/footer'\r\nimport HeaderAdmin from '../../../components/header'\r\nimport Menu from '../../../components/menu'\r\n\r\nimport './dashboard.css';\r\n\r\nfunction DashBoard() {\r\n    return (\r\n        <div>\r\n            <HeaderAdmin></HeaderAdmin>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <Menu></Menu>\r\n\r\n                    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                        <div\r\n                            className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-5 pb-2 mb-3 border-bottom\">\r\n                            <h1 className=\"h2\">Dashboard</h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                                <div className=\"card bg-danger text-white\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Quantidade Usuarios</h5>\r\n                                        <p className=\"card-text text-right pr-5\"><h1>3</h1></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <div className=\"card bg-warning text-dark\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Quantidade Locais</h5>\r\n                                        <p className=\"card-text text-right pr-5\"><h1>3</h1></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n\r\n            <Footer></Footer>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DashBoard","import React, { useEffect, useState } from 'react'\r\nimport useForm from 'react-hook-form';\r\nimport HeaderAdmin from '../../../components/header'\r\nimport Menu from '../../../components/menu'\r\nimport DataTable from 'react-data-table-component';\r\nimport { moedarealMask, cepMask } from '../../../util/mask';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport api from '../../../services/api';\r\n\r\nimport '../admin.css';\r\nimport './locais.css';\r\n\r\nfunction Locais() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const [locais, setLocais] = useState([]);\r\n    const [textoFiltrado, setTextoFiltrado] = useState([]);\r\n    const [nome, setNome] = useState('');\r\n    const [locaisFiltrados, setLocaisFiltrados] = useState([]);\r\n    const [descricaoLocal, setDescricaoLocal] = useState();\r\n    const [quantCadeiras, setQuantCadeiras] = useState();\r\n    const [quantMesas, setQuantMesas] = useState('');\r\n    const [custoHora, setCustoHora] = useState();\r\n    const [cep, setCep] = useState('');\r\n    const [logradouro, setLogradouro] = useState('');\r\n    const [estado, setEstado] = useState('');\r\n    const [cidade, setCidade] = useState('');\r\n    const [imagem, setImagem] = useState('');\r\n    const [bairro, setBairro] = useState('');\r\n    const [id, setId] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [mensagem, setMensagem] = useState('');\r\n\r\n    const columns = [\r\n        {\r\n            cell: row => <img src={row.image} alt={row.name} className=\"imagemLocal\" />,\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n        {\r\n            name: 'Nome',\r\n            selector: 'name',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Descrição do Local',\r\n            cell: row => <div data-tag=\"___react-data-table-allow-propagation___\">{tipoLocal(row.typePlace)}</div>,\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true\r\n        },\r\n        {\r\n            name: 'Quantidade de Cadeiras',\r\n            selector: 'numberChairs',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Quantidade de Mesas',\r\n            selector: 'numberTables',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Custo por Hora',\r\n            selector: 'hourlyCost',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Cep',\r\n            selector: 'cep',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Logradouro',\r\n            selector: 'address',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Estado',\r\n            selector: 'state',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Cidade',\r\n            selector: 'city',\r\n            sortable: true\r\n        },\r\n        {\r\n            cell: row => <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => { editar(row.id) }}>Editar</button>,\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n        {\r\n            cell: row => <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={() => { remover(row) }}>Remover</button>,\r\n            ignoreRowClick: true,\r\n            allowOverflow: true,\r\n            button: true,\r\n        },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        listaLocais();\r\n    }, [])\r\n\r\n    const limparCarmpos = () => {\r\n        setId(0);\r\n        setNome('');\r\n        setDescricaoLocal('');\r\n        setQuantCadeiras('');\r\n        setQuantMesas('');\r\n        setCustoHora('');\r\n        setCep('');\r\n        setLogradouro('');\r\n        setBairro('');\r\n        setEstado('');\r\n        setCidade('');\r\n        setImagem('');\r\n    }\r\n\r\n    const buscarCep = value => {\r\n        setCep(cepMask(value));\r\n        if (value.length === 9) {\r\n\r\n            api.get('http://viacep.com.br/ws/' + value + '/json/')\r\n                .then((response) => {\r\n                    if (response.data.erro !== true) {\r\n                        setBairro(response.data.bairro);\r\n                        setLogradouro(response.data.logradouro);\r\n                        setCidade(response.data.localidade);\r\n                        setEstado(response.data.uf);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n        else {\r\n            setBairro('');\r\n            setLogradouro('');\r\n            setCidade('');\r\n            setEstado('');\r\n        }\r\n    }\r\n\r\n    const tipoLocal = tipo => {\r\n        switch (tipo) {\r\n            case 1:\r\n                return \"Sala\";\r\n            case 2:\r\n                return \"Sala de Reunião\";\r\n            case 3:\r\n                return \"Sala com videoconferência\";\r\n            case 4:\r\n                return \"Lounge\";\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const editar = (id) => {\r\n        let local = locais.filter(item => item.id === id);\r\n        if (local.length > 0) {\r\n            setMensagem('');\r\n            setId(id);\r\n            setNome(local[0].name);\r\n            setDescricaoLocal(local[0].typePlace);\r\n            setQuantCadeiras(local[0].numberChairs);\r\n            setQuantMesas(local[0].numberTables);\r\n            setCustoHora(local[0].hourlyCost);\r\n            setCep(local[0].cep);\r\n            setLogradouro(local[0].address);\r\n            setBairro(local[0].district);\r\n            setEstado(local[0].state);\r\n            setCidade(local[0].city);\r\n            setImagem(local[0].image);\r\n        }\r\n    }\r\n\r\n    const remover = (local) => {\r\n        if (window.confirm(\"Deseja realmente excluir o Local (\" + local.name + \")?\")) {\r\n            api.delete('/places/' + local.id, { headers: { Authorization: 'BEARER ' + localStorage.getItem(\"usuario-vibbra-coworking\") } })\r\n                .then(response => {\r\n                    listaLocais()\r\n                    toast.success('Local (' + local.name + ') Excluido');\r\n                })\r\n                .catch(error => toast.error(error.message));\r\n        }\r\n    }\r\n    const onSubmit = (event) => {\r\n\r\n        setLoading(true);\r\n        var obj = {\r\n            \"name\": nome,\r\n            \"typePlace\": descricaoLocal,\r\n            \"numberChairs\": quantCadeiras,\r\n            \"numberTables\": quantMesas,\r\n            \"hourlyCost\": custoHora,\r\n            \"cep\": cep,\r\n            \"address\": logradouro,\r\n            \"district\": bairro,\r\n            \"state\": estado,\r\n            \"city\": cidade,\r\n            \"image\": imagem\r\n        }\r\n\r\n\r\n        if (id === 0) {\r\n            api.post('/places', obj, { headers: { Authorization: 'BEARER ' + localStorage.getItem(\"usuario-vibbra-coworking\") } })\r\n                .then(response => {\r\n                    listaLocais()\r\n                    toast.success('Local Cadastrado');\r\n                })\r\n                .catch(error => console.log(error));\r\n        } else {\r\n            obj[\"id\"] = id;\r\n            api.put('/places/' + id, obj, { headers: { Authorization: 'BEARER ' + localStorage.getItem(\"usuario-vibbra-coworking\") } })\r\n                .then(response => {\r\n                    listaLocais()\r\n                    toast.success('Local Alterado');\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n\r\n        limparCarmpos();\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const listaLocais = () => {\r\n        api.get('/places', { headers: { Authorization: 'BEARER ' + localStorage.getItem(\"usuario-vibbra-coworking\") } })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setLocais(response.data);\r\n                setLocaisFiltrados(response.data);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    const onChangeFiltroTexto = (event) => {\r\n        setTextoFiltrado(event.target.value);\r\n        setLocaisFiltrados(locais.filter(item => item.nome.toLowerCase().includes(event.target.value.toLowerCase()) || item.estado.toLowerCase().includes(event.target.value.toLowerCase())));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer position=\"top-right\" autoClose={5000}></ToastContainer>\r\n            <HeaderAdmin></HeaderAdmin>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <Menu></Menu>\r\n\r\n                    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                        <div\r\n                            className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-5 pb-2 mb-3 border-bottom\">\r\n                            <h1 className=\"h2\">Locais</h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body mt-4\">\r\n                                <h3>Cadastre um novo local</h3>\r\n                                <hr className=\"mt-3\" />\r\n                                <form className=\"form-signin\" id=\"form-local\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"col-3\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setNome(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={nome || ''}\r\n                                                id=\"nome\"\r\n                                                name=\"nome\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe o Nome do Local\"\r\n                                                ref={register({\r\n                                                    required: 'Nome do Local obrigatório'\r\n                                                })} />\r\n                                            {errors.nome && <span className=\"error\">{errors.nome.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-5\">\r\n                                            <select className=\"form-control\"\r\n                                                onChange={e => {\r\n                                                    setDescricaoLocal(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={descricaoLocal || ''}\r\n                                                id=\"descricaoLocal\"\r\n                                                name=\"descricaoLocal\"\r\n                                                ref={register({\r\n                                                    required: 'Descrição do local obrigatório'\r\n                                                })}>\r\n                                                <option value=\"\">Selecione</option>\r\n                                                <option value=\"1\">Sala</option>\r\n                                                <option value=\"2\">Sala de Reunião</option>\r\n                                                <option value=\"3\">Sala com videoconferência</option>\r\n                                                <option value=\"4\">Lounge</option>\r\n                                            </select>\r\n                                            {errors.descricaoLocal && <span className=\"error\">{errors.descricaoLocal.message}</span>}\r\n\r\n                                        </div>\r\n                                        <div className=\"col-1\">\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                onChange={e => {\r\n                                                    setQuantCadeiras(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={quantCadeiras || ''}\r\n                                                id=\"quantCadeiras\"\r\n                                                name=\"quantCadeiras\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Cadeiras\"\r\n                                                ref={register({\r\n                                                    required: 'Quantidade de Cadeiras obrigatório'\r\n                                                })} />\r\n                                            {errors.quantCadeiras && <span className=\"error\">{errors.quantCadeiras.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-1\">\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                onChange={e => {\r\n                                                    setQuantMesas(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={quantMesas || ''}\r\n                                                id=\"quantMesas\"\r\n                                                name=\"quantMesas\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Mesas\"\r\n                                                ref={register({\r\n                                                    required: 'Quantidade de Mesas obrigatório'\r\n                                                })} />\r\n                                            {errors.quantMesas && <span className=\"error\">{errors.quantMesas.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setCustoHora(moedarealMask(e.target.value));\r\n                                                }\r\n                                                }\r\n                                                value={custoHora || ''}\r\n                                                maxLength=\"10\"\r\n                                                id=\"custoHora\"\r\n                                                name=\"custoHora\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe o Custo por Hora\"\r\n                                                ref={register({\r\n                                                    required: 'Custo por Hora obrigatório'\r\n                                                })} />\r\n                                            {errors.custoHora && <span className=\"error\">{errors.custoHora.message}</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mt-4\"></div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"col-2\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    buscarCep(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={cep || ''}\r\n                                                id=\"cep\"\r\n                                                name=\"cep\"\r\n                                                maxLength=\"9\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe o Cep\"\r\n                                                ref={register({\r\n                                                    required: 'Cep obrigatório'\r\n                                                })} />\r\n                                            {errors.cep && <span className=\"error\">{errors.cep.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setLogradouro(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={logradouro || ''}\r\n                                                id=\"logradouro\"\r\n                                                name=\"logradouro\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe o Logradouro\"\r\n                                                ref={register({\r\n                                                    required: 'Logradouro obrigatório'\r\n                                                })} />\r\n                                            {errors.logradouro && <span className=\"error\">{errors.logradouro.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-2\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setBairro(e.target.value);\r\n                                                }}\r\n                                                value={bairro || ''}\r\n                                                id=\"bairro\"\r\n                                                name=\"bairro\"\r\n                                                maxLength=\"100\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe o Bairro\"\r\n                                                ref={register({\r\n                                                    required: 'Bairro obrigatório'\r\n                                                })} />\r\n                                            {errors.bairro && <span className=\"error\">{errors.bairro.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-1\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setEstado(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={estado || ''}\r\n                                                maxLength=\"2\"\r\n                                                id=\"estado\"\r\n                                                name=\"estado\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe o Estado\"\r\n                                                ref={register({\r\n                                                    required: 'Estado obrigatório'\r\n                                                })} />\r\n                                            {errors.estado && <span className=\"error\">{errors.estado.message}</span>}\r\n                                        </div>\r\n                                        <div className=\"col-3\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setCidade(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={cidade || ''}\r\n                                                id=\"cidade\"\r\n                                                name=\"cidade\"\r\n                                                maxLength=\"100\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe a Cidade\"\r\n                                                ref={register({\r\n                                                    required: 'Cidade obrigatória'\r\n                                                })} />\r\n                                            {errors.cidade && <span className=\"error\">{errors.cidade.message}</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mt-4\"></div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"col-8\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={e => {\r\n                                                    setImagem(e.target.value);\r\n                                                }\r\n                                                }\r\n                                                value={imagem}\r\n                                                id=\"imagem\"\r\n                                                name=\"imagem\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Informe a url da Imagem\"\r\n                                                ref={register({\r\n                                                    required: 'Imagem obrigatório'\r\n                                                })} />\r\n                                            {errors.imagem && <span className=\"error\">{errors.imagem.message}</span>}\r\n                                            <div className=\"mt-4\"></div>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\" disabled={!loading ? '' : 'none'}>{loading ? \"Salvando...\" : \"Salvar\"}</button>\r\n                                            <span className=\"btn btn-danger ml-4 cursor-pointer\" onClick={() => limparCarmpos()} role=\"button\">Limpar</span>\r\n\r\n                                        </div>\r\n                                        <div className=\"col-4 text-center\">\r\n                                            <img src={imagem} alt={nome} className=\"imagemLocal\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {mensagem !== '' ?\r\n                                        <div className=\"mt-4 mb-4\" dangerouslySetInnerHTML={{ __html: mensagem }} /> : ''}\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-4\"></div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Lista de Locais</h3>\r\n                                <div className=\"mt-5\"></div>\r\n\r\n                                {locaisFiltrados.length > 0 && <div className=\"row\">\r\n                                    <div className=\"col-5\">\r\n                                        <label htmlFor=\"textoFiltrado\"> Filtrar por : </label>\r\n                                        <input type=\"text\" value={textoFiltrado} name=\"textoFiltrado\" className=\"form-control\" placeholder=\"Informe o local\" onChange={onChangeFiltroTexto} />\r\n\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                <DataTable\r\n                                    columns={columns}\r\n                                    data={locaisFiltrados}\r\n                                    noDataComponent=\"Não há locais cadastrados.\"\r\n                                    pagination\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Locais;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    Route,\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Login from './pages/conta/login';\r\nimport CriarContaRh from './pages/conta/criar-rh';\r\nimport CriarContaProfissional from './pages/conta/criar-profissional';\r\n\r\nimport AdminDashboard from './pages/admin/dashboard';\r\nimport AdminLocais from './pages/admin/locais';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { parseJwt, usuarioAutenticado } from './util/auth';\r\n\r\n\r\nconst PermissaoAdmin = ({ component: Component }) => (\r\n    <Route\r\n        render={props =>\r\n            usuarioAutenticado() && parseJwt().TypeUser === \"Administrator\" ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect to={{ pathname: \"/\" }} />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nconst Routes = () => (\r\n    <Router>\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Login} />\r\n                <Route path=\"/conta/rh\" component={CriarContaRh} />\r\n                <Route path=\"/conta/profissional\" component={CriarContaProfissional} />\r\n\r\n                <PermissaoAdmin path=\"/admin/dashboard\" component={AdminDashboard} />\r\n                <PermissaoAdmin path=\"/admin/locais\" component={AdminLocais} />\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nReactDOM.render(<Routes />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}